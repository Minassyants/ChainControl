# Generated by Django 3.2.14 on 2022-11-01 10:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

def additional_file_update(apps, schema_editor):
    Additional_file = apps.get_model('ChainControl', 'Additional_file')
    ContentType =  apps.get_model('contenttypes', 'ContentType')
    for a in Additional_file.objects.all():
        a.content_type = ContentType.objects.get_for_model(a.request_1)
        a.object_id = a.request_1.id
        a.save()

def approval_update(apps, schema_editor):
    Approval = apps.get_model('ChainControl', 'Approval')
    ContentType =  apps.get_model('contenttypes', 'ContentType')
    for a in Approval.objects.all():
        a.content_type = ContentType.objects.get_for_model(a.request)
        a.object_id = a.request.id
        a.save()

def history_update(apps, schema_editor):
    History = apps.get_model('ChainControl', 'History')
    ContentType =  apps.get_model('contenttypes', 'ContentType')
    for a in History.objects.all():
        a.content_type = ContentType.objects.get_for_model(a.request)
        a.object_id = a.request.id
        a.save()

def initiator_update(apps, schema_editor):
    Initiator = apps.get_model('ChainControl', 'Initiator')
    ContentType =  apps.get_model('contenttypes', 'ContentType')
    for a in Initiator.objects.all():
        a.content_type = ContentType.objects.get_for_model(a.request_type)
        a.object_id = a.request_type.id
        a.save()

def ordering_update(apps, schema_editor):
    Ordering = apps.get_model('ChainControl', 'Ordering')
    ContentType =  apps.get_model('contenttypes', 'ContentType')
    for a in Ordering.objects.all():
        a.content_type = ContentType.objects.get_for_model(a.request_type)
        a.object_id = a.request_type.id
        a.save()

def requestexecutor_update(apps, schema_editor):
    RequestExecutor = apps.get_model('ChainControl', 'RequestExecutor')
    ContentType =  apps.get_model('contenttypes', 'ContentType')
    for a in RequestExecutor.objects.all():
        a.content_type = ContentType.objects.get_for_model(a.request_type)
        a.object_id = a.request_type.id
        a.save()



class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ChainControl', '0044_alter_contract_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('destination', models.CharField(blank=True, max_length=200, null=True, verbose_name='Направление')),
                ('purpose', models.TextField(blank=True, max_length=300, null=True, verbose_name='Цель командировки')),
                ('date_from', models.DateField(auto_now_add=True, verbose_name='Дата начала')),
                ('date_to', models.DateField(auto_now_add=True, verbose_name='Дата окончания')),
                ('ticket_price', models.FloatField(verbose_name='Стоимость билетов')),
                ('cost_of_living', models.FloatField(verbose_name='Стоимость проживания')),
                ('status', models.CharField(choices=[('OP', 'Открыта'), ('OA', 'На согласовании'), ('AP', 'Согласована'), ('OR', 'На доработке'), ('CA', 'Отменена'), ('DO', 'Выполнена')], default='OP', max_length=2, verbose_name='Статус заявки')),
            ],
            options={
                'verbose_name': 'Заявка на командирование',
                'verbose_name_plural': 'Заявки на командирование',
                'ordering': ['date_from'],
            },
        ),
        migrations.CreateModel(
            name='Mission_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Вид командировки',
                'verbose_name_plural': 'Виды командировок',
            },
        ),

        migrations.AddField(
            model_name='additional_file',
            name='content_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='additional_file',
            name='object_id',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.RunPython(additional_file_update)
        ,
        migrations.RemoveField(
            model_name='additional_file',
            name='request_1',
        ),

        migrations.AddField(
            model_name='approval',
            name='content_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='approval',
            name='object_id',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.RunPython(approval_update)
        ,
        migrations.RemoveField(
            model_name='approval',
            name='request',
        ),

        migrations.AddField(
            model_name='history',
            name='content_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='history',
            name='object_id',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.RunPython(history_update)
        ,
        migrations.RemoveField(
            model_name='history',
            name='request',
        ),

        migrations.AddField(
            model_name='initiator',
            name='content_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='initiator',
            name='object_id',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.RunPython(initiator_update)
        ,
        migrations.RemoveField(
            model_name='initiator',
            name='request_type',
        ),

        migrations.AddField(
            model_name='ordering',
            name='content_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ordering',
            name='object_id',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.RunPython(ordering_update)
        ,
        migrations.RemoveField(
            model_name='ordering',
            name='request_type',
        ),

        migrations.RemoveField(
            model_name='request_type',
            name='roles',
        ),

        migrations.AddField(
            model_name='requestexecutor',
            name='content_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='requestexecutor',
            name='object_id',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.RunPython(requestexecutor_update)
        ,
        migrations.RemoveField(
            model_name='requestexecutor',
            name='request_type',
        ),

        migrations.AddIndex(
            model_name='additional_file',
            index=models.Index(fields=['content_type', 'object_id'], name='ChainContro_content_d71e41_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['content_type', 'object_id'], name='ChainContro_content_ce9aa0_idx'),
        ),
        migrations.AddIndex(
            model_name='initiator',
            index=models.Index(fields=['content_type', 'object_id'], name='ChainContro_content_a30d7b_idx'),
        ),
        migrations.AddIndex(
            model_name='ordering',
            index=models.Index(fields=['content_type', 'object_id'], name='ChainContro_content_7b6aa8_idx'),
        ),
        migrations.AddIndex(
            model_name='requestexecutor',
            index=models.Index(fields=['content_type', 'object_id'], name='ChainContro_content_b6bbc5_idx'),
        ),
        migrations.AddField(
            model_name='mission',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ChainControl.client', verbose_name='Клиент/Компания'),
        ),
        migrations.AddField(
            model_name='mission',
            name='individual',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ChainControl.individual', verbose_name='Физ. лицо'),
        ),
        migrations.AddField(
            model_name='mission',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChainControl.mission_type', verbose_name='Вид командировки'),
        ),
        migrations.AddField(
            model_name='mission',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
